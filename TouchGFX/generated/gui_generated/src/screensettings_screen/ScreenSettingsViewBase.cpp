/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screensettings_screen/ScreenSettingsViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "BitmapDatabase.hpp"

ScreenSettingsViewBase::ScreenSettingsViewBase() :
    buttonCallback(this, &ScreenSettingsViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &ScreenSettingsViewBase::flexButtonCallbackHandler)
{

    box1.setPosition(0, 0, 480, 272);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    box2.setPosition(0, 0, 480, 50);
    box2.setColor(touchgfx::Color::getColorFrom24BitRGB(227, 185, 0));

    textArea1.setXY(215, 13);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID2));

    buttonWithLabelOk.setXY(419, 212);
    buttonWithLabelOk.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));
    buttonWithLabelOk.setLabelText(touchgfx::TypedText(T_SINGLEUSEID3));
    buttonWithLabelOk.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabelOk.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));

    buttonWithLabelCancel.setXY(0, 212);
    buttonWithLabelCancel.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_ICON_BUTTON_PRESSED_ID));
    buttonWithLabelCancel.setLabelText(touchgfx::TypedText(T_SINGLEUSEID4));
    buttonWithLabelCancel.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabelCancel.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithLabelCancel.setAction(buttonCallback);

    boxWithBorder1.setPosition(197, 74, 252, 50);
    boxWithBorder1.setColor(touchgfx::Color::getColorFrom24BitRGB(133, 133, 133));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorder1.setBorderSize(2);

    boxWithBorder1_1.setPosition(198, 136, 252, 50);
    boxWithBorder1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(133, 133, 133));
    boxWithBorder1_1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    boxWithBorder1_1.setBorderSize(2);

    textArea2.setXY(127, 87);
    textArea2.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T_SINGLEUSEID7));

    textArea3.setXY(86, 148);
    textArea3.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T_SINGLEUSEID8));

    textAreaPw.setPosition(207, 148, 234, 26);
    textAreaPw.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textAreaPw.setLinespacing(0);
    textAreaPwBuffer[0] = 0;
    textAreaPw.setWildcard(textAreaPwBuffer);
    textAreaPw.setTypedText(touchgfx::TypedText(T_SINGLEUSEID6));

    textAreaSsid.setPosition(206, 86, 234, 26);
    textAreaSsid.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    textAreaSsid.setLinespacing(0);
    textAreaSsidBuffer[0] = 0;
    textAreaSsid.setWildcard(textAreaSsidBuffer);
    textAreaSsid.setTypedText(touchgfx::TypedText(T_SINGLEUSEID5));

    flexButtonSsid.setBoxWithBorderPosition(0, 0, 251, 50);
    flexButtonSsid.setBorderSize(5);
    flexButtonSsid.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
    flexButtonSsid.setPosition(198, 74, 251, 50);
    flexButtonSsid.setAlpha(0);
    flexButtonSsid.setAction(flexButtonCallback);

    flexButtonPw.setBoxWithBorderPosition(0, 0, 251, 50);
    flexButtonPw.setBorderSize(5);
    flexButtonPw.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(0, 102, 153), touchgfx::Color::getColorFrom24BitRGB(0, 153, 204), touchgfx::Color::getColorFrom24BitRGB(0, 51, 102), touchgfx::Color::getColorFrom24BitRGB(51, 102, 153));
    flexButtonPw.setPosition(199, 135, 251, 50);
    flexButtonPw.setAlpha(0);
    flexButtonPw.setAction(flexButtonCallback);

    add(box1);
    add(box2);
    add(textArea1);
    add(buttonWithLabelOk);
    add(buttonWithLabelCancel);
    add(boxWithBorder1);
    add(boxWithBorder1_1);
    add(textArea2);
    add(textArea3);
    add(textAreaPw);
    add(textAreaSsid);
    add(flexButtonSsid);
    add(flexButtonPw);
}

void ScreenSettingsViewBase::setupScreen()
{

}

//Called when the screen is done with transition/load
void ScreenSettingsViewBase::afterTransition()
{
    //UpdateScreen
    //When screen is entered call virtual function
    //Call updateScreen
    updateScreen();
}

void ScreenSettingsViewBase::keyboardSelectedVar(uint8_t value)
{
    //KeyboardSelected
    //When keyboardSelectedVar is called call virtual function
    //Call keyboardSelected
    keyboardSelected(value);

    //ChangeToScreenKeyboard
    //When KeyboardSelected completed change screen to ScreenKeyboard
    //Go to ScreenKeyboard with no screen transition
    application().gotoScreenKeyboardScreenNoTransition();
}

void ScreenSettingsViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabelCancel)
    {
        //ButtonCancel
        //When buttonWithLabelCancel clicked change screen to Screen1
        //Go to Screen1 with no screen transition
        application().gotoScreen1ScreenNoTransition();
    }
}

void ScreenSettingsViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButtonSsid)
    {
        //ButtonSsid
        //When flexButtonSsid clicked call keyboardSelectedVar on ScreenSettings
        //Call keyboardSelectedVar
        keyboardSelectedVar(0);
    }
    else if (&src == &flexButtonPw)
    {
        //ButtonPw
        //When flexButtonPw clicked call keyboardSelectedVar on ScreenSettings
        //Call keyboardSelectedVar
        keyboardSelectedVar(1);
    }
}
